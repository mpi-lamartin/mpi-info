"use strict";(self.webpackChunkmpi_info=self.webpackChunkmpi_info||[]).push([[717],{6850:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var i=r(4848),t=r(8453);const s={title:"Colle 1 : Langages, automates et grammaires",authors:"qfortier",tags:["colle"]},l=void 0,o={permalink:"/mpi-info/2024/09/11/colle1",editUrl:"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-11-colle1.md",source:"@site/blog/2024-09-11-colle1.md",title:"Colle 1 : Langages, automates et grammaires",description:"Voici la liste des comp\xe9tences et connaissances \xe0 avoir pour votre premi\xe8re colle. La colle est constitu\xe9e d'un ou plusieurs exercices.",date:"2024-09-11T00:00:00.000Z",tags:[{inline:!0,label:"colle",permalink:"/mpi-info/tags/colle"}],hasTruncateMarker:!1,authors:[{name:"Quentin Fortier",title:"Professeur d'informatique",url:"https://fortierq.github.io/",imageURL:"https://fortierq.github.io/assets/images/photo_cv.png",key:"qfortier",page:null}],frontMatter:{title:"Colle 1 : Langages, automates et grammaires",authors:"qfortier",tags:["colle"]},unlisted:!1,prevItem:{title:"LeetCode 2",permalink:"/mpi-info/2024/09/15/leetcode2"},nextItem:{title:"LeetCode 1",permalink:"/mpi-info/2024/09/08/leetcode1"}},a={authorsImageUrls:[void 0]},u=[];function c(e){const n={li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Voici la liste des comp\xe9tences et connaissances \xe0 avoir pour votre premi\xe8re colle. La colle est constitu\xe9e d'un ou plusieurs exercices."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Langages"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"D\xe9finitions et op\xe9rations sur les mots et langages"}),"\n",(0,i.jsx)(n.li,{children:"Montrer l'\xe9galit\xe9 de deux langages (double inclusion...)"}),"\n",(0,i.jsx)(n.li,{children:"Montrer une propri\xe9t\xe9 par r\xe9currence sur des mots"}),"\n",(0,i.jsx)(n.li,{children:"Conna\xeetre la d\xe9finition de langage r\xe9gulier"}),"\n",(0,i.jsx)(n.li,{children:"Montrer qu'un langage est r\xe9gulier (\xe9ventuellement en passant par une expression r\xe9guli\xe8re)"}),"\n",(0,i.jsx)(n.li,{children:"Conna\xeetre la syntaxe des expressions r\xe9guli\xe8res"}),"\n",(0,i.jsx)(n.li,{children:"Montrer une propri\xe9t\xe9 sur les langages r\xe9guliers (ou expressions r\xe9guli\xe8res) par induction structurelle"}),"\n",(0,i.jsx)(n.li,{children:"\xc9crire un programme OCaml pour manipuler une expression r\xe9guli\xe8re"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Automates"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"D\xe9finitions"}),"\n",(0,i.jsx)(n.li,{children:"\xc9crire un programme OCaml pour manipuler un automate"}),"\n",(0,i.jsx)(n.li,{children:"Montrer qu'un langage est reconnaissable"}),"\n",(0,i.jsx)(n.li,{children:"Trouver le langage reconnu par un automate"}),"\n",(0,i.jsx)(n.li,{children:"Compl\xe9ter un automate"}),"\n",(0,i.jsx)(n.li,{children:"Algorithme de d\xe9terminisation et automate des parties"}),"\n",(0,i.jsx)(n.li,{children:"Stabilit\xe9 des langages reconnaissables par compl\xe9mentaire, intersection, union, diff\xe9rence. Automate produit."}),"\n",(0,i.jsx)(n.li,{children:"\xc9tats accessibles et co-accessibles. Automate \xe9mond\xe9. Tout automate est \xe9quivalent \xe0 un automate \xe9mond\xe9."}),"\n",(0,i.jsx)(n.li,{children:"Lemme de l'\xe9toile, avec d\xe9monstration et application pour montrer qu'un langage n'est pas reconnaissable."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Th\xe9or\xe8me de Kleene"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Langage local, expression r\xe9guli\xe8re lin\xe9aire."}),"\n",(0,i.jsx)(n.li,{children:"Algorithme de Berry-Sethi pour construire un automate (de Glushkov) \xe0 partir d'une expression r\xe9guli\xe8re."}),"\n",(0,i.jsx)(n.li,{children:"\u03b5-transitions. Tout automate avec des \u03b5-transitions est \xe9quivalent \xe0 un automate sans \u03b5-transition."}),"\n",(0,i.jsx)(n.li,{children:"Automate de Thompson (construit r\xe9cursivement) \xe0 partir d'une expression r\xe9guli\xe8re."}),"\n",(0,i.jsx)(n.li,{children:"M\xe9thode d'\xe9limination des \xe9tats pour obtenir une expression r\xe9guli\xe8re \xe0 partir d'un automate."}),"\n",(0,i.jsx)(n.li,{children:"Th\xe9or\xe8me de Kleene et cons\xe9quences."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Grammaires"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Grammaire non-contextuelle (alg\xe9brique, hors-contexte)."}),"\n",(0,i.jsx)(n.li,{children:"D\xe9rivation."}),"\n",(0,i.jsx)(n.li,{children:"Langage engendr\xe9. Savoir d\xe9montrer par r\xe9currence (sur la longueur du mot ou de la d\xe9rivation) que le langage engendr\xe9 par G est bien ce qu'on souhaite."}),"\n",(0,i.jsx)(n.li,{children:"Les langages r\xe9guliers sont alg\xe9briques."}),"\n",(0,i.jsx)(n.li,{children:"Arbre de d\xe9rivation."}),"\n",(0,i.jsx)(n.li,{children:"Grammaire ambig\xfce. D\xe9rivation gauche. Savoir montrer qu'une grammaire est ambig\xfce."}),"\n",(0,i.jsx)(n.li,{children:"Analyse syntaxique : exemple."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var i=r(6540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);