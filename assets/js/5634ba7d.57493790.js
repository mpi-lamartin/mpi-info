"use strict";(self.webpackChunkmpi_info=self.webpackChunkmpi_info||[]).push([[5005],{969:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2025/2/20/","metadata":{"permalink":"/mpi-info/2025/2/20/","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2025-2-20.md","source":"@site/blog/2025-2-20.md","title":"R\xe9visions SQL","description":"Exercices SQL \xe0 faire pendant les vacances :","date":"2025-02-20T00:00:00.000Z","tags":[{"inline":true,"label":"r\xe9vision","permalink":"/mpi-info/tags/revision"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"R\xe9visions SQL","authors":"qfortier","tags":["r\xe9vision"]},"unlisted":false,"nextItem":{"title":"Colle 5 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle, concurrence","permalink":"/mpi-info/2025/1/31/colle5"}},"content":"Exercices SQL \xe0 faire pendant les vacances :  \\n- https://sql-exercices.github.io\\n- https://www.sqlzoo.net/wiki/SQL_Tutorial\\n\\n[R\xe9sum\xe9 SQL](https://raw.githubusercontent.com/fortierq/cours/main/sql/resume/sql_resume.pdf)"},{"id":"/2025/1/31/colle5","metadata":{"permalink":"/mpi-info/2025/1/31/colle5","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2025-1-31-colle5.md","source":"@site/blog/2025-1-31-colle5.md","title":"Colle 5 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle, concurrence","description":"- Classes de complexit\xe9 : Tout le cours.","date":"2025-01-31T00:00:00.000Z","tags":[{"inline":true,"label":"colle","permalink":"/mpi-info/tags/colle"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Colle 5 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle, concurrence","authors":"qfortier","tags":["colle"]},"unlisted":false,"prevItem":{"title":"R\xe9visions SQL","permalink":"/mpi-info/2025/2/20/"},"nextItem":{"title":"Colle 4 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle","permalink":"/mpi-info/2025/1/4/colle4"}},"content":"- **Classes de complexit\xe9** : Tout le cours.\\n\\n- **Algorithmes d\'approximation et Branch and Bound** : Tout le cours.\\n\\n- **Algorithmes probabilistes** : Tout le cours.\\n\\n- **IA** : Tout le cours.\\n\\n- **Logique (d\xe9duction naturelle)** : Tout le cours.  \\n\\n- **Concurrence** : Tout le cours sauf s\xe9maphores."},{"id":"/2025/1/4/colle4","metadata":{"permalink":"/mpi-info/2025/1/4/colle4","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2025-1-4-colle4.md","source":"@site/blog/2025-1-4-colle4.md","title":"Colle 4 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle","description":"- D\xe9cidabilit\xe9 : Tout le cours.","date":"2025-01-04T00:00:00.000Z","tags":[{"inline":true,"label":"colle","permalink":"/mpi-info/tags/colle"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Colle 4 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle","authors":"qfortier","tags":["colle"]},"unlisted":false,"prevItem":{"title":"Colle 5 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle, concurrence","permalink":"/mpi-info/2025/1/31/colle5"},"nextItem":{"title":"LeetCode 8","permalink":"/mpi-info/2024/12/23/leetcode8"}},"content":"- **D\xe9cidabilit\xe9** : Tout le cours.\\n\\n- **Classes de complexit\xe9** : Tout le cours.\\n\\n- **Algorithmes d\'approximation et Branch and Bound** : Tout le cours.\\n\\n- **Algorithmes probabilistes** : Tout le cours.\\n\\n- **IA** : Tout le cours.\\n\\n- **Logique (d\xe9duction naturelle)** : Preuves en d\xe9duction naturelle classique (pas de quantificateur)."},{"id":"/2024/12/23/leetcode8","metadata":{"permalink":"/mpi-info/2024/12/23/leetcode8","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-12-23-leetcode8.mdx","source":"@site/blog/2024-12-23-leetcode8.mdx","title":"LeetCode 8","description":"Exercice \xe0 faire en C sur LeetCode pendant les vacances de No\xebl//leetcode.com/problems/find-champion-ii (facile)","date":"2024-12-23T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 8","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"Colle 4 : Classes de complexit\xe9, algorithmes, IA, d\xe9duction naturelle","permalink":"/mpi-info/2025/1/4/colle4"},"nextItem":{"title":"Colle 3 : Graphes et classes de complexit\xe9","permalink":"/mpi-info/2024/11/17/colle3"}},"content":"Exercice \xe0 faire en C sur LeetCode pendant les vacances de No\xebl : https://leetcode.com/problems/find-champion-ii (facile)\\n\\nEt pour ceux qui veulent plus difficile : https://leetcode.com/problems/shortest-cycle-in-a-graph\\n\\n<details>\\n<summary>Indice</summary>\\n\\nPour le premier exercice, il s\'agit de trouver s\'il existe un unique sommet de degr\xe9 entrant nul.\\n\\nPour le deuxi\xe8me exercice, on peut utiliser un parcours en largeur : si on est en train de visiter un sommet `u` et qu\'on trouve un voisin `v` de `u` qui est d\xe9j\xe0 visit\xe9, alors on a trouv\xe9 un cycle de longueur `d[u] + d[v] + 1`.\\n\\n</details>\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/findChampion.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true} />"},{"id":"/2024/11/17/colle3","metadata":{"permalink":"/mpi-info/2024/11/17/colle3","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-11-17-colle3.md","source":"@site/blog/2024-11-17-colle3.md","title":"Colle 3 : Graphes et classes de complexit\xe9","description":"Voici la liste des comp\xe9tences et connaissances \xe0 avoir en colle ainsi que le DS 3.","date":"2024-11-17T00:00:00.000Z","tags":[{"inline":true,"label":"colle","permalink":"/mpi-info/tags/colle"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Colle 3 : Graphes et classes de complexit\xe9","authors":"qfortier","tags":["colle"]},"unlisted":false,"prevItem":{"title":"LeetCode 8","permalink":"/mpi-info/2024/12/23/leetcode8"},"nextItem":{"title":"LeetCode 7","permalink":"/mpi-info/2024/11/9/leetcode7"}},"content":"Voici la liste des comp\xe9tences et connaissances \xe0 avoir en colle ainsi que le DS 3. \\n\\n**R\xe9visions sur les graphes** : Tout le cours.\\n\\n**Arbres couvrants** : Tout le cours.\\n\\n**Composantes fortement connexes et Kosaraju** : Tout le cours.\\n\\n**Couplages et graphes bipartis** : Tout le cours.\\n\\n**Plus courts chemins et A*** : Tout le cours.\\n\\n**D\xe9cidabilit\xe9** : Tout le cours.\\n\\n**Classes de complexit\xe9** : Tout le cours.\\n\\nMerci de poser obligatoirement au moins une question de d\xe9cidabilit\xe9 ou classe de complexit\xe9 : montrer qu\'un probl\xe8me est ind\xe9cidable (r\xe9duction depuis ARRET) ou NP-complet (NP + r\xe9duction polynomiale depuis SAT).\\n\\n**Algorithmes d\'approximation et Branch and Bound** : Tout le cours.\\n\\n**Algorithmes probabilistes** : Tout le cours."},{"id":"/2024/11/9/leetcode7","metadata":{"permalink":"/mpi-info/2024/11/9/leetcode7","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-11-9-leetcode7.mdx","source":"@site/blog/2024-11-9-leetcode7.mdx","title":"LeetCode 7","description":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain//leetcode.com/problems/min-cost-to-connect-all-points","date":"2024-11-09T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 7","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"Colle 3 : Graphes et classes de complexit\xe9","permalink":"/mpi-info/2024/11/17/colle3"},"nextItem":{"title":"Colle 2 : Grammaires et graphes","permalink":"/mpi-info/2024/10/13/colle2"}},"content":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain : https://leetcode.com/problems/min-cost-to-connect-all-points  \\n\\n<details>\\n<summary>Indice</summary>\\n\\nUtiliser l\'algorithme de Kruskal sur le graphe dont les sommets sont les points et les ar\xeates sont les distances entre les points.\\n\\n</details>"},{"id":"/2024/10/13/colle2","metadata":{"permalink":"/mpi-info/2024/10/13/colle2","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-10-13-colle2.md","source":"@site/blog/2024-10-13-colle2.md","title":"Colle 2 : Grammaires et graphes","description":"Voici la liste des comp\xe9tences et connaissances \xe0 avoir pour votre deuxi\xe8me colle ainsi que le DS 2.","date":"2024-10-13T00:00:00.000Z","tags":[{"inline":true,"label":"colle","permalink":"/mpi-info/tags/colle"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Colle 2 : Grammaires et graphes","authors":"qfortier","tags":["colle"]},"unlisted":false,"prevItem":{"title":"LeetCode 7","permalink":"/mpi-info/2024/11/9/leetcode7"},"nextItem":{"title":"LeetCode 6","permalink":"/mpi-info/2024/10/13/leetcode6"}},"content":"Voici la liste des comp\xe9tences et connaissances \xe0 avoir pour votre deuxi\xe8me colle ainsi que le DS 2. \\n\\n**Grammaires** :\\n- Grammaire non-contextuelle (alg\xe9brique, hors-contexte).  \\n- D\xe9rivation.  \\n- Langage engendr\xe9. Savoir d\xe9montrer par r\xe9currence (sur la longueur du mot ou de la d\xe9rivation) que le langage engendr\xe9 par G est bien ce qu\'on souhaite.\\n- Les langages r\xe9guliers sont alg\xe9briques.\\n- Arbre de d\xe9rivation.  \\n- Grammaire ambig\xfce. D\xe9rivation gauche. Savoir montrer qu\'une grammaire est ambig\xfce.  \\n- Analyse syntaxique : exemple.\\n\\n**R\xe9visions sur les graphes** :  \\n- D\xe9finitions : degr\xe9, voisins...  \\n- Chemin, cycle, connexit\xe9.  \\n- Connexe \xe0 $n$ sommets $\\\\Rightarrow$ au moins $n - 1$ ar\xeates.  \\n- Acyclique \xe0 $n$ sommets $\\\\Rightarrow$ au plus $n - 1$ ar\xeates.  \\n- Composantes connexes, composantes fortement connexes.  \\n- Un graphe est un arbre ssi il est connexe acyclique ssi connexe et $n - 1$ ar\xeates ssi acyclique et $n - 1$ ar\xeates.  \\n- Repr\xe9sentations par matrice et liste d\'adjacence.  \\n- Parcours en largeur et profondeur. Application \xe0 la connexit\xe9 et \xe0 la recherche de cycle.\\n\\n**Arbres couvrants** :  \\n- D\xe9finition.  \\n- Algorithme de Kruskal. Correction.  \\n- Union-Find avec compression de chemin et union par rang."},{"id":"/2024/10/13/leetcode6","metadata":{"permalink":"/mpi-info/2024/10/13/leetcode6","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-10-13-leetcode6.mdx","source":"@site/blog/2024-10-13-leetcode6.mdx","title":"LeetCode 6","description":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain//leetcode.com/problems/maximum-subarray","date":"2024-10-13T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 6","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"Colle 2 : Grammaires et graphes","permalink":"/mpi-info/2024/10/13/colle2"},"nextItem":{"title":"LeetCode 5","permalink":"/mpi-info/2024/10/06/leetcode5"}},"content":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain : https://leetcode.com/problems/maximum-subarray  \\nIl est possible de r\xe9soudre cet exercice en O(n).\\n\\n<details>\\n<summary>Indice</summary>\\n\\nParcourir `nums[i]` en conservant deux variables : la somme maximum finissant en `nums[i]` et la somme maximum trouv\xe9e jusqu\'\xe0 pr\xe9sent.\\n\\nVoir [algorithme de Kadane](https://en.wikipedia.org/wiki/Maximum_subarray_problem#Kadane\'s_algorithm).\\n\\n</details>\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/maxSubArray.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true} />"},{"id":"/2024/10/06/leetcode5","metadata":{"permalink":"/mpi-info/2024/10/06/leetcode5","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-10-06-leetcode5.mdx","source":"@site/blog/2024-10-06-leetcode5.mdx","title":"LeetCode 5","description":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain//leetcode.com/problems/minimum-path-sum","date":"2024-10-06T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 5","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"LeetCode 6","permalink":"/mpi-info/2024/10/13/leetcode6"},"nextItem":{"title":"LeetCode 4","permalink":"/mpi-info/2024/09/29/leetcode4"}},"content":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain : https://leetcode.com/problems/minimum-path-sum  \\nIl s\'agit d\'un cas particulier de recherche de plus court chemin dans un graphe acyclique. Cela peut \xeatre r\xe9solu par programmation dynamique.\\n\\n<details>\\n<summary>Indice</summary>\\n\\nCalculer d[i][j] = la longueur minimum d\'un chemin de (0, 0) \xe0 (i, j) en utilisant uniquement des d\xe9placements vers le bas et vers la droite.\\n\\n1. Trouver une \xe9quation de r\xe9currence pour b[i][j].  \\n2. Remplir le tableau b en utilisant cette \xe9quation de r\xe9currence.  \\n3. Renvoyer la solution.\\n\\n</details>\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/minPathSum.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true} />"},{"id":"/2024/09/29/leetcode4","metadata":{"permalink":"/mpi-info/2024/09/29/leetcode4","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-29-leetcode4.mdx","source":"@site/blog/2024-09-29-leetcode4.mdx","title":"LeetCode 4","description":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain//leetcode.com/problems/longest-palindromic-substring/description","date":"2024-09-29T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 4","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"LeetCode 5","permalink":"/mpi-info/2024/10/06/leetcode5"},"nextItem":{"title":"LeetCode 3","permalink":"/mpi-info/2024/09/21/leetcode3"}},"content":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain : https://leetcode.com/problems/longest-palindromic-substring/description  \\nUn palindrome est une cha\xeene qui se lit de la m\xeame fa\xe7on dans les deux sens. Par exemple, \\"abba\\" est un palindrome. On cherche \xe0 trouver la plus grande sous-cha\xeene palindrome d\'une cha\xeene donn\xe9e.\\n\\n<details>\\n<summary>Indice</summary>\\n\\nUn algorithme na\xeff qui regarde, pour tout i, j, si la sous-cha\xeene de s de i \xe0 j est un palindrome (= qui se lit de la m\xeame fa\xe7on dans les deux sens), a une complexit\xe9 O(n^3).  \\n\\nPour que le programme soit accept\xe9, on peut trouver une solution en O(n^2) par programmation dynamique. Pour cela :  \\n1. D\xe9finir un tableau b tel que b[i][j] vaut vrai si la sous-cha\xeene de s de i \xe0 j est un palindrome.\\n2. Trouver une \xe9quation de r\xe9currence pour b[i][j].  \\n3. Remplir le tableau b en utilisant cette \xe9quation de r\xe9currence.  \\n4. Trouver la plus grande sous-cha\xeene palindrome en parcourant le tableau b.\\n\\nOn pourra utiliser la fonction suivante :\\n    \\n```c\\n// Renvoie la sous-cha\xeene de s de l\'indice i \xe0 j inclus\\nchar* substring(char* s, int i, int j) {\\n    char* t = malloc(j - i + 2);\\n    for(int k = i; k <= j; k++)\\n        t[k - i] = s[k];\\n    t[j - i + 1] = \'\\\\0\';\\n    return t;\\n}\\n````\\n\\n</details>\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/longestPalindrome.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true} />"},{"id":"/2024/09/21/leetcode3","metadata":{"permalink":"/mpi-info/2024/09/21/leetcode3","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-21-leetcode3.mdx","source":"@site/blog/2024-09-21-leetcode3.mdx","title":"LeetCode 3","description":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain//leetcode.com/problems/number-of-islands","date":"2024-09-21T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 3","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"LeetCode 4","permalink":"/mpi-info/2024/09/29/leetcode4"},"nextItem":{"title":"Exercices de programmation et automates","permalink":"/mpi-info/2024/09/19/exercices"}},"content":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain : https://leetcode.com/problems/number-of-islands\\n\\n<details>\\n<summary>Indice</summary>\\n\\nCela revient \xe0 calculer les composantes connexes du graphe dont les sommets sont les cases de la grille et o\xf9 chaque case a 4 ar\xeates possibles avec les cases voisines.  \\nPour calculer le nombre de composantes connexes, on peut utiliser un parcours en profondeur (ou en largeur). On peut directement utiliser `grid` comme tableau des vus (en mettant une case \xe0 \'0\' apr\xe8s l\'avoir visit\xe9e).\\n\\n```c\\n// Parcours en profondeur depuis la case (i, j)\\nvoid dfs(char** grid, int n, int p, int i, int j) {\\n    ...\\n}\\n\\nint numIslands(char** grid, int gridSize, int* gridColSize) {\\n    int n = gridSize, p = gridColSize[0]; // n lignes, p colonnes\\n    int k = 0; // nombre de composantes connexes\\n    for(int i = 0; i < n; i++)\\n        for(int j = 0; j < p; j++)\\n            ...\\n    return k;\\n}\\n```\\n\\nSi besoin, vous pouvez revoir [le cours de 1\xe8re ann\xe9e](https://mp2i-info.github.io/6_graph/3_traversal/3_traversal).\\n\\n</details>\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/numIslands.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true} />"},{"id":"/2024/09/19/exercices","metadata":{"permalink":"/mpi-info/2024/09/19/exercices","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-19-exercices.mdx","source":"@site/blog/2024-09-19-exercices.mdx","title":"Exercices de programmation et automates","description":"Ajout d\'exercices pour s\'entra\xeener en autonomie :","date":"2024-09-19T00:00:00.000Z","tags":[{"inline":true,"label":"exercices","permalink":"/mpi-info/tags/exercices"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Exercices de programmation et automates","authors":"qfortier","tags":["exercices"]},"unlisted":false,"prevItem":{"title":"LeetCode 3","permalink":"/mpi-info/2024/09/21/leetcode3"},"nextItem":{"title":"LeetCode 2","permalink":"/mpi-info/2024/09/15/leetcode2"}},"content":"Ajout d\'exercices pour s\'entra\xeener en autonomie :\\n- [Exercices sur les automates et expressions r\xe9guli\xe8res](/docs/langages/tutor)\\n- [Exercices simples corrig\xe9s en OCaml](/docs/programmation/exercices)"},{"id":"/2024/09/15/leetcode2","metadata":{"permalink":"/mpi-info/2024/09/15/leetcode2","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-15-leetcode2.mdx","source":"@site/blog/2024-09-15-leetcode2.mdx","title":"LeetCode 2","description":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain//leetcode.com/problems/merge-two-sorted-lists","date":"2024-09-15T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 2","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"Exercices de programmation et automates","permalink":"/mpi-info/2024/09/19/exercices"},"nextItem":{"title":"Colle 1 : Langages, automates et grammaires","permalink":"/mpi-info/2024/09/11/colle1"}},"content":"Exercice \xe0 faire en C sur LeetCode, au plus tard pour samedi prochain : https://leetcode.com/problems/merge-two-sorted-lists\\n\\n<details>\\n<summary>Indice</summary>\\n\\nOn pourra \xe9crire une fonction r\xe9cursive.\\n</details>\\n\\nSi vous avez termin\xe9 l\'exercice, vous pouvez faire ce prolongement (plus difficile) : https://leetcode.com/problems/merge-k-sorted-lists\\n\\n<details>\\n<summary>Indice</summary>\\n\\nR\xe9utiliser la fonction pr\xe9c\xe9dente pour fusionner deux listes.  \\nL\'id\xe9al est de r\xe9soudre ce probl\xe8me en O(n log (k)) o\xf9 n est la somme des tailles des listes et k le nombre de listes.\\n</details>\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/mergeKLists.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true}>\\n\\nSolution en O(nlog(k)) avec une approche diviser pour r\xe9gner (o\xf9 n = somme des tailles des listes et k = nombre de listes) :\\n- `l1` = fusionner r\xe9cursivement les k/2 premi\xe8res listes\\n- `l2` = fusionner r\xe9cursivement les k/2 derni\xe8res listes \\n- retourner la fusion (avec mergeTwoLists) de `l1` et `l2`\\n\\nChaque fusion s\'effectue en O(n) et il y a log(k) fusions, d\'o\xf9 la complexit\xe9 en O(nlog(k))\\n\\n</Solution>"},{"id":"/2024/09/11/colle1","metadata":{"permalink":"/mpi-info/2024/09/11/colle1","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-11-colle1.md","source":"@site/blog/2024-09-11-colle1.md","title":"Colle 1 : Langages, automates et grammaires","description":"Voici la liste des comp\xe9tences et connaissances \xe0 avoir pour votre premi\xe8re colle. La colle est constitu\xe9e d\'un ou plusieurs exercices.","date":"2024-09-11T00:00:00.000Z","tags":[{"inline":true,"label":"colle","permalink":"/mpi-info/tags/colle"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Colle 1 : Langages, automates et grammaires","authors":"qfortier","tags":["colle"]},"unlisted":false,"prevItem":{"title":"LeetCode 2","permalink":"/mpi-info/2024/09/15/leetcode2"},"nextItem":{"title":"LeetCode 1","permalink":"/mpi-info/2024/09/08/leetcode1"}},"content":"Voici la liste des comp\xe9tences et connaissances \xe0 avoir pour votre premi\xe8re colle. La colle est constitu\xe9e d\'un ou plusieurs exercices.\\n\\n**Langages** :\\n- D\xe9finitions et op\xe9rations sur les mots et langages\\n- Montrer l\'\xe9galit\xe9 de deux langages (double inclusion...)\\n- Montrer une propri\xe9t\xe9 par r\xe9currence sur des mots\\n- Conna\xeetre la d\xe9finition de langage r\xe9gulier\\n- Montrer qu\'un langage est r\xe9gulier (\xe9ventuellement en passant par une expression r\xe9guli\xe8re)\\n- Conna\xeetre la syntaxe des expressions r\xe9guli\xe8res\\n- Montrer une propri\xe9t\xe9 sur les langages r\xe9guliers (ou expressions r\xe9guli\xe8res) par induction structurelle\\n- \xc9crire un programme OCaml pour manipuler une expression r\xe9guli\xe8re\\n\\n**Automates** :\\n- D\xe9finitions\\n- \xc9crire un programme OCaml pour manipuler un automate\\n- Montrer qu\'un langage est reconnaissable\\n- Trouver le langage reconnu par un automate\\n- Compl\xe9ter un automate\\n- Algorithme de d\xe9terminisation et automate des parties\\n- Stabilit\xe9 des langages reconnaissables par compl\xe9mentaire, intersection, union, diff\xe9rence. Automate produit.\\n- \xc9tats accessibles et co-accessibles. Automate \xe9mond\xe9. Tout automate est \xe9quivalent \xe0 un automate \xe9mond\xe9.\\n- Lemme de l\'\xe9toile, avec d\xe9monstration et application pour montrer qu\'un langage n\'est pas reconnaissable.\\n\\n**Th\xe9or\xe8me de Kleene** : \\n- Langage local, expression r\xe9guli\xe8re lin\xe9aire.   \\n- Algorithme de Berry-Sethi pour construire un automate (de Glushkov) \xe0 partir d\'une expression r\xe9guli\xe8re.  \\n- \u03b5-transitions. Tout automate avec des \u03b5-transitions est \xe9quivalent \xe0 un automate sans \u03b5-transition.  \\n- Automate de Thompson (construit r\xe9cursivement) \xe0 partir d\'une expression r\xe9guli\xe8re.  \\n- M\xe9thode d\'\xe9limination des \xe9tats pour obtenir une expression r\xe9guli\xe8re \xe0 partir d\'un automate.  \\n- Th\xe9or\xe8me de Kleene et cons\xe9quences.\\n\\n**Grammaires** :\\n- Grammaire non-contextuelle (alg\xe9brique, hors-contexte).  \\n- D\xe9rivation.  \\n- Langage engendr\xe9. Savoir d\xe9montrer par r\xe9currence (sur la longueur du mot ou de la d\xe9rivation) que le langage engendr\xe9 par G est bien ce qu\'on souhaite.\\n- Les langages r\xe9guliers sont alg\xe9briques.\\n- Arbre de d\xe9rivation.  \\n- Grammaire ambig\xfce. D\xe9rivation gauche. Savoir montrer qu\'une grammaire est ambig\xfce.  \\n- Analyse syntaxique : exemple."},{"id":"/2024/09/08/leetcode1","metadata":{"permalink":"/mpi-info/2024/09/08/leetcode1","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-08-leetcode1.mdx","source":"@site/blog/2024-09-08-leetcode1.mdx","title":"LeetCode 1","description":"Voici le premier exercice \xe0 faire en C sur LeetCode, au plus tard pour dimanche prochain (15 septembre)//leetcode.com/problems/longest-substring-without-repeating-characters","date":"2024-09-08T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"LeetCode 1","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"Colle 1 : Langages, automates et grammaires","permalink":"/mpi-info/2024/09/11/colle1"},"nextItem":{"title":"Codespace GitHub","permalink":"/mpi-info/2024/09/02/codespace"}},"content":"Voici le premier exercice \xe0 faire en C sur LeetCode, au plus tard pour dimanche prochain (15 septembre) : https://leetcode.com/problems/longest-substring-without-repeating-characters  \\nUne vid\xe9o explicative pour utiliser LeetCode : https://youtu.be/q5dEFWMO8-o  \\nVous pouvez me demander de l\'aide par mail.\\n\\nimport Solution from \'@site/src/components/Solution\';\\nimport Code from \'!!raw-loader!./leetcode/lengthOfLongestSubstring.c\';\\n\\n<Solution file={Code} lang=\'c\' show={true} />"},{"id":"/2024/09/02/codespace","metadata":{"permalink":"/mpi-info/2024/09/02/codespace","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-02-codespace.md","source":"@site/blog/2024-09-02-codespace.md","title":"Codespace GitHub","description":"Pour pouvoir utiliser un environnement de d\xe9veloppement en ligne avec Visual Code, OCaml, utop, gcc :","date":"2024-09-02T00:00:00.000Z","tags":[{"inline":true,"label":"github","permalink":"/mpi-info/tags/github"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Codespace GitHub","authors":"qfortier","tags":["github","programmation","devoir"]},"unlisted":false,"prevItem":{"title":"LeetCode 1","permalink":"/mpi-info/2024/09/08/leetcode1"},"nextItem":{"title":"Inscription LeetCode","permalink":"/mpi-info/2024/09/02/leetcode"}},"content":"Pour pouvoir utiliser un environnement de d\xe9veloppement en ligne avec Visual Code, OCaml, utop, gcc :\\n- S\'incrire sur [GitHub](https://github.com) (Sign Up).\\n- Aller sur https://github.com/mpi-lamartin/environnement et cliquer sur le bouton Code puis \\"Create codespace on main\\".\\n- Vous pouvez retrouver votre codespace en cliquant sur le menu en haut \xe0 gauche puis \\"Codespaces\\".\\n- Les fichiers sont normalement sauvegard\xe9s en ligne... Vous pouvez quand m\xeame t\xe9l\xe9charger (dans \\"fichier\\") des fichiers importants pour \xeatre s\xfbr de ne pas les perdre.\\n- Par d\xe9faut vous avez le droit \xe0 120h/mois d\'utilisation, ce qui devrait \xeatre suffisant. Vous pouvez demander un compte \xe9tudiant pour avoir 180h/mois : https://github.com/education/students.\\n\\n[Vid\xe9o explicative](https://youtu.be/l68fIQEvgHE)"},{"id":"/2024/09/02/leetcode","metadata":{"permalink":"/mpi-info/2024/09/02/leetcode","editUrl":"https://github.com/mpi-lamartin/mpi-info/blog/2024-09-02-leetcode.md","source":"@site/blog/2024-09-02-leetcode.md","title":"Inscription LeetCode","description":"Vous devez vous inscrire sur https://leetcode.com (en cliquant sur Create Account). Envoyez-moi ensuite votre nom d\'utilisateur par mail pour que je puisse v\xe9rifier votre progression.","date":"2024-09-02T00:00:00.000Z","tags":[{"inline":true,"label":"leetcode","permalink":"/mpi-info/tags/leetcode"},{"inline":true,"label":"devoir","permalink":"/mpi-info/tags/devoir"},{"inline":true,"label":"programmation","permalink":"/mpi-info/tags/programmation"}],"hasTruncateMarker":false,"authors":[{"name":"Quentin Fortier","title":"Professeur d\'informatique","url":"https://fortierq.github.io/","imageURL":"https://fortierq.github.io/assets/images/photo_cv.png","key":"qfortier","page":null}],"frontMatter":{"title":"Inscription LeetCode","authors":"qfortier","tags":["leetcode","devoir","programmation"]},"unlisted":false,"prevItem":{"title":"Codespace GitHub","permalink":"/mpi-info/2024/09/02/codespace"}},"content":"Vous devez vous inscrire sur [https://leetcode.com](https://leetcode.com) (en cliquant sur Create Account). Envoyez-moi ensuite votre nom d\'utilisateur par mail pour que je puisse v\xe9rifier votre progression.\\n\\nUne vid\xe9o explicative pour utiliser LeetCode : https://youtu.be/q5dEFWMO8-o"}]}}')}}]);