"use strict";(self.webpackChunkmpi_info=self.webpackChunkmpi_info||[]).push([[276],{6623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=t(4848),i=t(8453),a=t(1470),o=t(9365);const l={hide_table_of_contents:!1,hide_title:!0,title:"Code"},c=void 0,s={id:"concurrence/concurrence/code",title:"Code",description:"Exemple simple",source:"@site/docs/concurrence/1_concurrence/2_code.md",sourceDirName:"concurrence/1_concurrence",slug:"/concurrence/concurrence/code",permalink:"/mpi-info/docs/concurrence/concurrence/code",draft:!1,unlisted:!1,editUrl:"https://github.com/mpi-lamartin/mpi-info/docs/concurrence/1_concurrence/2_code.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{hide_table_of_contents:!1,hide_title:!0,title:"Code"},sidebar:"concurrence",previous:{title:"Concurrence",permalink:"/mpi-info/docs/concurrence/concurrence/"},next:{title:"Mutex et s\xe9maphore",permalink:"/mpi-info/docs/concurrence/mutex_semaphore/"}},u={},d=[{value:"Exemple simple",id:"exemple-simple",level:2},{value:"Produit de matrice",id:"produit-de-matrice",level:2},{value:"Incr\xe9mentation d&#39;un compteur",id:"incr\xe9mentation-dun-compteur",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"exemple-simple",children:"Exemple simple"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsxs)(o.A,{value:"c",label:"C",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'#include <pthread.h> // threads POSIX (standard Linux)\n#include <stdio.h>\n\nvoid *f(void *x) {\n    int *n = (int *)x; // Conversion du type\n    for(int i = 0; i < 100000; i++) {\n        if(i % 20000 == 0)\n            printf("%d %d\\n", *n, i);\n    }\n}\n\nint main() {\n    pthread_t t1, t2;\n    int n1 = 1, n2 = 2;\n    pthread_create(&t1, NULL, f, (void *)&n1);\n    pthread_create(&t2, NULL, f, (void *)&n2);\n    pthread_join(t1, NULL); // Attendre la fin de t1\n    pthread_join(t2, NULL); // Attendre la fin de t2\n}\n'})}),(0,r.jsxs)(n.p,{children:["Compilation : ",(0,r.jsx)(n.code,{children:"gcc -pthread exemple.c"})]})]}),(0,r.jsxs)(o.A,{value:"OCaml",label:"OCaml",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ocaml",children:'let counter = ref 0\n\nlet increment n =\n  for i = 0 to n - 1 do\n    counter := !counter + 1;\n  done\n\nlet main () =\n  let n = 1_000_000 in\n  let t0 = Thread.create increment n in\n  let t1 = Thread.create increment n in\n  Thread.join t0;\n  Thread.join t1;\n  Printf.printf "counter = %d\\n" !counter\n\nlet () = main ()\n'})}),(0,r.jsxs)(n.p,{children:["Compilation : ",(0,r.jsx)(n.code,{children:"ocamlopt -I +unix -I +threads unix.cmxa threads.cmxa exemple.ml"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"produit-de-matrice",children:"Produit de matrice"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",metastring:'title="Produit de matrice"',children:'#include <pthread.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n#define N 1000\n#define NTHREADS 8\n\nlong long timeInMilliseconds(void) {\n    struct timeval tv;\n    gettimeofday(&tv,NULL);\n    return (((long long)tv.tv_sec)*1000)+(tv.tv_usec/1000);\n}\n\nint u[N][N], v[N][N], w[N][N];\n\nvoid* sum(void* arg) {\n    int a = *(int*)arg;\n    for(int b = a; b < N*N; b += NTHREADS) {\n        int i = b / N;\n        int j = b % N;\n        w[i][j] = 0;\n        for(int k = 0; k < N; k++) {\n            w[i][j] += u[i][k] * v[k][j];\n        }\n    }\n    return NULL;\n}\n\nint main(void) {\n    pthread_t threads[N*N];\n    for(int i = 0; i < N; i++) {\n        for(int j = 0; j < N; j++) {\n            u[i][j] = i;\n            v[i][j] = j;\n        }\n    }\n    long long t = timeInMilliseconds();\n    for(int i = 0; i < NTHREADS; i++) {\n        int* arg = malloc(sizeof(int));\n        *arg = i;\n        pthread_create(&threads[i], NULL, sum, arg);\n        free(arg);\n    }\n    for(int i = 0; i < NTHREADS; i++) {\n        pthread_join(threads[i], NULL);\n    }\n    printf("En parall\xe8le : %lld ms\\n", timeInMilliseconds() - t);\n    t = timeInMilliseconds();\n    for(int i = 0; i < N; i++) {\n        for(int j = 0; j < N; j++) {\n            w[i][j] = 0;\n            for(int k = 0; k < N; k++) {\n                w[i][j] += u[i][k] * v[k][j];\n            }\n        }\n    }\n    printf("En s\xe9quentiel : %lld ms\\n", timeInMilliseconds() - t);\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"incr\xe9mentation-dun-compteur",children:"Incr\xe9mentation d'un compteur"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(o.A,{value:"c",label:"C",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <pthread.h>\n\nint counter;\n\nvoid *increment(void *arg){\n    for (int i = 1; i <= 1000000; i++) {\n        counter++;\n    }\n    return NULL;\n}\n\nint main(void){\n    counter = 0;\n    pthread_t t1, t2;\n    pthread_create(&t1, NULL, increment, NULL);\n    pthread_create(&t2, NULL, increment, NULL);\n    pthread_join(t1, NULL);\n    pthread_join(t2, NULL);\n    printf("Counter = %d\\n", counter);\n    return 0;\n}\n'})})}),(0,r.jsx)(o.A,{value:"OCaml",label:"OCaml",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ocaml",children:'open Printf\n\nlet n = 10_000_000\nlet p = 3\nlet nb_fils = 3\n\nlet f index =\n  printf "Le fil %d a d\xe9marr\xe9\\n" index;\n  for i = 1 to n * p do\n    if i mod n = 0 then (\n      printf "Le fil %d a atteint %d.\\n" index i\n    )\n  done\n\nlet main () =\n  printf "Avant\\n";\n  let fils = Array.init nb_fils (fun i -> Thread.create f i) in\n  printf "Pendant\\n";\n  for i = 0 to nb_fils - 1 do\n    Thread.join fils.(i)\n  done;\n  printf "Apr\xe8s\\n"\n\nlet () = main ()\n'})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ocaml",children:'let counter = Atomic.make 0\n\nlet increment n =\n  for i = 0 to n - 1 do\n    Atomic.incr counter\n  done\n\nlet main () =\n  let n = 1_000_000 in\n  let t0 = Thread.create increment n in\n  let t1 = Thread.create increment n in\n  Thread.join t0;\n  Thread.join t1;\n  Printf.printf "counter = %d\\n" (Atomic.get counter)\n\nlet () = main ()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var r=t(4164);const i={tabItem:"tabItem_Ymn6"};var a=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>_});var r=t(6540),i=t(4164),a=t(3104),o=t(6347),l=t(205),c=t(7485),s=t(1682),u=t(679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,s.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const i=(0,o.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=m(e),[o,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[s,d]=h({queryString:t,groupId:i}),[f,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,u.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),b=(()=>{const e=s??f;return p({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{b&&c(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),v(e)}),[d,v,a]),tabValues:a}}var v=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function j(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:s}=(0,a.a_)(),u=e=>{const n=e.currentTarget,t=c.indexOf(n),i=l[t].value;i!==r&&(s(n),o(i))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:d,onClick:u,...a,className:(0,i.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function N(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(g,{...n,...e})]})}function _(e){const n=(0,v.A)();return(0,x.jsx)(N,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);